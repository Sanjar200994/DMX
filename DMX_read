
#include <DMXSerial.h>
#include <Modbus.h>
#include <ModbusSerial.h>
#include <SoftwareSerial.h>
#include <TM1637Display.h>
const int CLK = 2;//Set the CLK pin connection to the display
const int DIO = 3; //Set the DIO pin connection to the display
TM1637Display display(CLK, DIO);
int NumReg[2] = {1001, 2001}; //переменная регистра
ModbusSerial mb;
SoftwareSerial mbSerial(10,11);
int button_up_State = 0;
int button_down_State = 0;
int button_var_State = 0;
int Num_index;

const int RedPin =    9;  // PWM output pin for Red Light.
const int GreenPin =  6;  // PWM output pin for Green Light.
const int BluePin =   5;  // PWM output pin for Blue Light.

#define RedDefaultLevel   100
#define GreenDefaultLevel 200
#define BlueDefaultLevel  255

const int button_up = 8;   // переключение регистра вверх
const int button_down = 7; // переключение регистра вниз
const int button_var = 4;
   
void setup () {
   display.setBrightness(0x0a);
    mb.config(&mbSerial, 19200, 12);
    mb.setSlaveId(1);  
    mb.addHreg(0);
    mb.addHreg(1); 

 DMXSerial.init(DMXReceiver);
  
  pinMode(RedPin,   OUTPUT); // sets the digital pin as output
  pinMode(GreenPin, OUTPUT);
  pinMode(BluePin,  OUTPUT);
}


void loop() {

 mb.task();
 unsigned long lastPacket = DMXSerial.noDataSince();
 button_up_State = digitalRead(button_up);
 button_down_State = digitalRead(button_down);
 button_var_State = digitalRead(button_var);

  
if (lastPacket < 5000) {

analogWrite(RedPin,   DMXSerial.read(1));
analogWrite(GreenPin, DMXSerial.read(2));
analogWrite(BluePin,  DMXSerial.read(3));

 } else {
   
    analogWrite(RedPin,   RedDefaultLevel);
    analogWrite(GreenPin, GreenDefaultLevel);
    analogWrite(BluePin,  BlueDefaultLevel);
 } 
  if (button_up_State==HIGH){
   
    if ((Num_index==0 && NumReg[Num_index]<1512 ) || (Num_index==1 && NumReg[Num_index] <2512))
    {
       NumReg[Num_index]++;
      }
    }

   if (button_down_State==HIGH){
     if ((Num_index==0 && NumReg[Num_index]>1001 ) || (Num_index==1 && NumReg[Num_index] >2001))
    {
       NumReg[Num_index]--;
      }
    }

   if (button_var_State==HIGH){
    
    Num_index=1-Num_index;
   
    }
 
 mb.Hreg(0, DMXSerial.read(NumReg[0]-1000));
 mb.Hreg(1, DMXSerial.read((NumReg[0]-1000)+1));
 
 display.showNumberDec();
 
}
